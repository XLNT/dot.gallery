type Entity {
  id: ID! @id
  handle: String @unique
  email: String! @unique

  # entity has_many assets
  assets: [Asset!]! @relation(name: "EntityAssets", onDelete: CASCADE)
  # entity has_many placements
  placements: [Placement!]! @relation(name: "EntityPlacements", onDelete: CASCADE)
  # entity has_many tickets
  tickets: [Ticket!]! @relation(name: "EntityTickets", onDelete: CASCADE)

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

# Asset (sorta) conforms to the 1155 standard, using `domain` as the equivalent of upper bits
type Asset {
  id: ID! @id
  domain: String!
  uri: Json! # { image: String! }

  # asset belongs_to owner
  owner: Entity! @relation(name: "EntityAssets")
  # asset may have been granted in response to a placement
  placement: Placement @relation(link: INLINE)

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Ticket {
  id: ID! @id
  redeemed: Boolean! @default(value: false)
  # asset belongs_to owner
  owner: Entity! @relation(name: "EntityTickets")
  # asset belongs_to exhibition
  exhibition: Exhibition! @relation(name: "ExhibitionTickets")

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Exhibition {
  id: ID! @id
  title: String!
  number: Int! @unique
  capacity: Int!
  theme: Json
  extent: Int! @default(value: 7)

  # exhibition has_many shows
  shows: [Show!]! @relation(onDelete: CASCADE)
  # exhibition has_many rooms
  rooms: [Room!]! @relation(name: "ExhibitionRooms", onDelete: CASCADE)
  # exhibition has_many tickets
  tickets: [Ticket!]! @relation(name: "ExhibitionTickets", onDelete: CASCADE)

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Show {
  id: ID! @id
  number: Int!
  opensAt: DateTime!
  closesAt: DateTime!

  # show belongs_to exhibition
  exhibition: Exhibition!

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  entryId: ID! @unique

  x: Int!
  y: Int!

  # room belongs_to exhibition
  exhibition: Exhibition! @relation(name: "ExhibitionRooms")
  # room has_many placements
  placements: [Placement!]! @relation(name: "RoomPlacements", onDelete: CASCADE)
}


type Placement {
  id: ID! @id
  x: Int!
  y: Int!

  # placement references entity
  entity: Entity! @relation(name: "EntityPlacements")
  # placement references room
  room: Room! @relation(name: "RoomPlacements")
  # placement references assets
  assets: [Asset!]!

  createdAt: DateTime! @createdAt
}
